@startuml

skinparam sequenceArrowThickness 2
skinparam sequence {
ArrowColor DarkBlue
LifeLineBorderColor Blue
ActorBorderColor Blue
BoundaryBorderColor Blue
ParticipantBorderColor Blue
}
skinparam arrow {
FontColor DarkBlue
FontSize 14
FontStyle bold
}

actor Client
boundary WebApp
participant "Card Management API" as CardMgmt #99FF99

note right of Client
Select active card
end note
Client->WebApp: Select Active Card
activate Client
activate WebApp
note over CardMgmt #FF7F3F
GET /cards?active
end note
WebApp-[#007F00]>CardMgmt: <font color=#007F00 size=20><b>GetActiveCards(ClientID)
activate CardMgmt #99FF99
WebApp<--CardMgmt: Cards[]
deactivate CardMgmt
Client<--WebApp: List of cards
deactivate WebApp
|||
Client->Client: Select card
|||
note right of Client
See and modify custom info
end note
Client->WebApp:Get custom info(CardLastDigits)
activate WebApp
note over CardMgmt #FF7F3F
GET /cards/{cardID}/custom-params
end note
WebApp-[#007F00]>CardMgmt: <font color=#007F00 size=20><b>GetCustomData(ClientID, CardLastDigits)
activate CardMgmt #99FF99
WebApp<--CardMgmt: CardCustomData
deactivate CardMgmt
Client<--WebApp: Card's custom info
deactivate WebApp
|||
Client->Client: Modify custom data
|||
Client->WebApp: Update custom info(CardLastDigits, CardCustomData)
activate WebApp
note over CardMgmt #FF7F3F
PATCH /cards/{cardID}/custom-params
    body:
        CustomParams
end note
WebApp-[#007F00]>CardMgmt: <font color=#007F00 size=20><b>UpdateCustomData(ClientID, CardLastDigits, CardCustomData)
activate CardMgmt #99FF99
WebApp<--CardMgmt: Success
deactivate CardMgmt
Client<--WebApp: Success
deactivate WebApp
deactivate Client
|||
@enduml